(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{208:function(t,s,a){t.exports=a.p+"assets/img/interface-preview.c17462bf.png"},209:function(t,s,a){t.exports=a.p+"assets/img/type-preview.0035610f.png"},233:function(t,s,a){"use strict";a.r(s);var e=a(3),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"타입-별칭-type-aliases"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#타입-별칭-type-aliases"}},[t._v("#")]),t._v(" 타입 별칭 (Type Aliases)")]),t._v(" "),e("p",[t._v("타입 별칭은 특정 타입이나 인터페이스를 참조할 수 있는 타입 변수를 의미합니다. 예를 들면 아래와 같습니다.")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// string 타입을 사용할 때")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'capt'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 타입 별칭을 사용할 때")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" MyName "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" MyName "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'capt'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("위와 같이 "),e("code",[t._v("string")]),t._v(", "),e("code",[t._v("number")]),t._v("와 같은 간단한 타입 뿐만 아니라 "),e("code",[t._v("interface")]),t._v(" 레벨의 복잡한 타입에도 별칭을 부여할 수 있습니다.\n아래 코드와 같이 말이죠.")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Developer "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  skill"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("타입 별칭에 제네릭도 사용할 수 있습니다.")]),t._v(" "),e("div",{staticClass:"language-ts extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ts"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" User"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("T")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"타입-별칭의-특징"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#타입-별칭의-특징"}},[t._v("#")]),t._v(" 타입 별칭의 특징")]),t._v(" "),e("p",[t._v("타입 별칭은 새로운 타입 값을 하나 생성하는 것이 아니라 정의한 타입에 대해 나중에 쉽게 참고할 수 있게 이름을 부여하는 것과 같습니다. 이러한 특징은 VSCode 상의 프리뷰 상태로 다른 타입과 어떤 차이점이 있는지 확인해볼 수 있습니다.")]),t._v(" "),e("p",[t._v("아래는 인터페이스로 선언한 타입을 프리뷰로 확인한 결과입니다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(208),alt:"interface-preview"}})]),t._v(" "),e("p",[t._v("아래는 타입 별칭으로 선언한 타입을 프리뷰로 확인한 결과입니다.")]),t._v(" "),e("p",[e("img",{attrs:{src:a(209),alt:"type-preview"}})]),t._v(" "),e("h2",{attrs:{id:"type-vs-interface"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type-vs-interface"}},[t._v("#")]),t._v(" type vs interface")]),t._v(" "),e("p",[t._v("타입 별칭과 인터페이스의 가장 큰 차이점은 타입의 확장 가능 / 불가능 여부입니다.\n인터페이스는 확장이 가능한데 반해 타입 별칭은 확장이 불가능합니다. 따라서, 가능한한 "),e("code",[t._v("type")]),t._v(" 보다는  "),e("code",[t._v("interface")]),t._v("로 선언해서 사용하는 것을 추천합니다.")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Open%E2%80%93closed_principle",target:"_blank",rel:"noopener noreferrer"}},[t._v("좋은 소프트웨어는 언제나 확장이 용이해야 한다는 원칙"),e("OutboundLink")],1),t._v("에 따라 가급적 확장 가능한 인터페이스로 선언하면 좋습니다 😃")])])])}),[],!1,null,null,null);s.default=n.exports}}]);